# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application
on: [push]

jobs:
  build:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: ["ubuntu-latest"]
        python-version: ["3.12"]
        # python-version: ["3.9", "3.10", "3.12"]
        # Excluding a version 3.10 and OS
        exclude:
          - os: windows-latest
            python-version: "3.10"
          # - os: windows-latest
          #   python-version: "3.12"
        

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # You can test your matrix by printing the current Python version
      - name: Display Python version and install dependecy 
        run: |
          python -c "import sys; print(sys.version)"
          python3 -m pip install --upgrade pip
      - name: Create a virtual environment and activate
        run: |
          python3 -m venv myenv
      - name: Activate the virtual environment and install packages
        run: |
          source myenv/bin/activate
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install SQLAlchemy
          pip install pandas
          pip freeze > requirements.txt
          echo "requirement.txt"
        # shell: bash
      - name: Commit and push requirements.txt
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          echo "Git configuration set successfully"

          git add requirements.txt
          echo "git add sucessful"
          git commit -m "Add requirements.txt from GitHub Actions"
          echo "git commit sucessful"
          ls 
          cat requirements.txt      
      - name: Push changes to GitHub
        env:
          PUSHPAT: ${{ secrets.PUSHPAT }}
        run: |
          git remote set-url origin https://email4prasanth:${{ secrets.PUSHPAT }}@github.com/email4prasanth/GitHubActions.git
          git push origin master

